name: CreaciÃ³n y subida de la imagen de angular
on:
  workflow_dispatch:
jobs:
  
  build:
    runs-on: ubuntu-latest
    environment: production
    env: 
      DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
    # Instalar docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Paso para instalar Docker
     # - name: Install Docker
#   run: |
#      sudo apt-get update
#      sudo apt-get install ca-certificates curl
#      sudo install -m 0755 -d /etc/apt/keyrings
#      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
#      sudo chmod a+r /etc/apt/keyrings/docker.asc
#      echo \
#      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
#      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
#      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#      sudo apt-get update
#      sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#      sudo docker run hello-world


      # Llamar a la action que me crea el nombre de la imagen
      - name: Llamar a la action que me crea el nombre de la imagen
        uses: ./.github/actions/tagger_action

      # Subirla a Docker Hub usando las credenciales en los secrets
      - name: Hacer login en DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      

      - id: image_creation
        name: Construir imagen
        run: |
          docker build -t $DOCKER_USER/sample-angular-app:0.0.0 .
          docker images

      - id: image_push
        name: Subir imagen a docker hub
        run: |
          docker push $DOCKER_USER/sample-angular-app:0.0.0


      
          
