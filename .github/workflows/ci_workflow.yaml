name: Creación y subida de la imagen de angular
on:
  workflow_call:
    inputs:
      username:
        description: "Usuario de DockerHub"
        required: true
        type: string
      password:
        description: "Contraseña de DockerHub"
        required: true
        type: string
jobs:
  
  build:
    runs-on: ubuntu-latest
    environment: production
   
    # Instalar docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Mostrando las variables
        run: |
          echo ${{ inputs.username }}
          echo ${{ inputs.password }}
          
      
      
      # Paso para instalar Docker
     # - name: Install Docker
#   run: |
#      sudo apt-get update
#      sudo apt-get install ca-certificates curl
#      sudo install -m 0755 -d /etc/apt/keyrings
#      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
#      sudo chmod a+r /etc/apt/keyrings/docker.asc
#      echo \
#      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
#      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
#      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#      sudo apt-get update
#      sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#      sudo docker run hello-world


      # Llamar a la action que me crea el nombre de la imagen
      - name: Extractor de la versión de un fichero JSON
        id: version_extractor
        uses: ./.github/actions/extractor
        with:
          file_path: ${{ vars.PACKAGE_JSON_PATH }}
          field_name: version
          
      - name: Extractor del nombre de un fichero JSON
        id: name_extractor
        uses: ./.github/actions/extractor
        with:
          file_path: ${{ vars.PACKAGE_JSON_PATH }}
          field_name: name
          
      - name: Llamar a la action que me crea el nombre de la imagen
        id: tagger
        uses: ./.github/actions/tagger_action
        with:
          user_name: ${{ inputs.username }}
          app_name: ${{ steps.name_extractor.outputs.field_value }}
          app_version: ${{ steps.version_extractor.outputs.field_value }}
      # Mostrar el nombre de la imagen creada
      - name: Mostrando el nombre de la imagen
        run: |
          echo "The output from the action is: ${{ steps.tagger.outputs.image_name }}"
  

      # Subirla a Docker Hub usando las credenciales en los secrets
      - name: Hacer login en DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.username }}
          password: ${{ inputs.password }}
      

      - id: image_creation
        name: Construir imagen
        run: |
          docker build -t ${{ steps.tagger.outputs.image_name }} .
          docker images

      - id: image_push
        name: Subir imagen a docker hub
        run: |
          docker push ${{ steps.tagger.outputs.image_name }}


      
          
